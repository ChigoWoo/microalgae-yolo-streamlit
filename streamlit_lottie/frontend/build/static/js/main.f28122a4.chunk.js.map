{"version":3,"sources":["StreamlitLottie.tsx","index.tsx"],"names":["withStreamlitConnection","props","lottieElementRef","useRef","lottieInstanceRef","args","animationData","speed","direction","loop","quality","height","width","useEffect","current","lottie","loadAnimation","container","renderer","autoplay","setSubframe","addEventListener","Streamlit","setFrameHeight","removeEventListener","destroy","undefined","setQuality","Number","isNaN","setSpeed","setDirection","style","ref","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA4FeA,eA1ES,SAACC,GACvB,IAAMC,EAAmBC,iBAAuB,MAC1CC,EAAoBD,mBAE1B,EAQgBF,EAAMI,KAPpBC,EADF,EACEA,cACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,QACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,MAqDF,OAlDAC,qBAAU,WACR,GAAI,OAASX,EAAiBY,QAsB9B,OAlBAV,EAAkBU,QAAUC,IAAOC,cAAc,CAC/CC,UAAWf,EAAiBY,QAC5BI,SAAU,MACVT,KAAMA,EACNU,UAAU,EACVb,cAAeA,IAEjBF,EAAkBU,QAAQM,aAAY,GAEtChB,EAAkBU,QAAQO,iBAAiB,aAAa,WACtDC,IAAUC,oBAQL,WACAnB,EAAkBU,UAGvBV,EAAkBU,QAAQU,oBAAoB,aAE9CpB,EAAkBU,QAAQW,UAC1BrB,EAAkBU,aAAUY,MAE7B,CAACpB,EAAeG,IAEnBI,qBAAU,WACHT,EAAkBU,SACvBC,IAAOY,WAAWjB,KACjB,CAACA,IAEJG,qBAAU,WACHT,EAAkBU,UACnBc,OAAOC,MAAMtB,IACjBH,EAAkBU,QAAQgB,SAASvB,MAClC,CAACA,IAEJM,qBAAU,WACHT,EAAkBU,SACvBV,EAAkBU,QAAQiB,aAAavB,KACtC,CAACA,IAGF,oCACE,yBACEwB,MAAO,CAAEpB,MAAOA,GAAS,OAAQD,OAAQA,GAAU,QACnDsB,IAAK/B,IAENgC,QAAQC,IAAI,c,MClFnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f28122a4.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  ComponentProps,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { useEffect, useRef } from \"react\"\r\nimport lottie, { AnimationItem } from \"lottie-web\"\r\n\r\ninterface PythonArgs {\r\n  animationData: any\r\n  loop: boolean | number\r\n  speed: number\r\n  direction: 1 | -1\r\n  quality: \"high\" | \"medium\" | \"low\"\r\n  height?: number\r\n  width?: number\r\n}\r\n\r\nconst StreamlitLottie = (props: ComponentProps) => {\r\n  const lottieElementRef = useRef<HTMLDivElement>(null)\r\n  const lottieInstanceRef = useRef<AnimationItem>()\r\n\r\n  const {\r\n    animationData,\r\n    speed,\r\n    direction,\r\n    loop,\r\n    quality,\r\n    height,\r\n    width,\r\n  }: PythonArgs = props.args\r\n\r\n  useEffect(() => {\r\n    if (null === lottieElementRef.current) {\r\n      return\r\n    }\r\n\r\n    lottieInstanceRef.current = lottie.loadAnimation({\r\n      container: lottieElementRef.current,\r\n      renderer: \"svg\",\r\n      loop: loop,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n    })\r\n    lottieInstanceRef.current.setSubframe(false)\r\n\r\n    lottieInstanceRef.current.addEventListener(\"DOMLoaded\", () => {\r\n      Streamlit.setFrameHeight()\r\n    })\r\n    /*\r\n    lottieInstanceRef.current.addEventListener(\"complete\", () => {\r\n      Streamlit.setComponentValue(true)\r\n    })\r\n    */\r\n\r\n    return () => {\r\n      if (!lottieInstanceRef.current) {\r\n        return\r\n      }\r\n      lottieInstanceRef.current.removeEventListener(\"DOMLoaded\")\r\n      // lottieInstanceRef.current.removeEventListener(\"complete\")\r\n      lottieInstanceRef.current.destroy()\r\n      lottieInstanceRef.current = undefined\r\n    }\r\n  }, [animationData, loop])\r\n\r\n  useEffect(() => {\r\n    if (!lottieInstanceRef.current) return\r\n    lottie.setQuality(quality)\r\n  }, [quality])\r\n\r\n  useEffect(() => {\r\n    if (!lottieInstanceRef.current) return\r\n    if (Number.isNaN(speed)) return\r\n    lottieInstanceRef.current.setSpeed(speed)\r\n  }, [speed])\r\n\r\n  useEffect(() => {\r\n    if (!lottieInstanceRef.current) return\r\n    lottieInstanceRef.current.setDirection(direction)\r\n  }, [direction])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ width: width || \"100%\", height: height || \"100%\" }}\r\n        ref={lottieElementRef}\r\n      ></div>\r\n      {console.log(\"Render\")}\r\n    </>\r\n  )\r\n}\r\nexport default withStreamlitConnection(StreamlitLottie)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StreamlitLottie from \"./StreamlitLottie\"\r\n\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StreamlitLottie />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}